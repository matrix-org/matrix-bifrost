name: E2E tests

on:
  push:
    branches: ["develop", "release-*"]
  pull_request:
  workflow_dispatch:

jobs:
  # Build the latest version of complement-compatible-synapse, and cache the image for use in e2e tests.
  build-synapse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout synapse
        uses: actions/checkout@v3
        with:
          repository: matrix-org/synapse
          ref: master
      - name: Get synapse git sha
        id: gitsha
        run: echo '::set-output name=sha::'`git rev-parse --short HEAD`
      - name: Cache complement-synapse image
        id: cached-image
        uses: actions/cache@v3
        with:
          path: /tmp/img-synapse.tar
          key: ${{ runner.os }}-complement-synapse-${{ steps.gitsha.outputs.sha }}
      - if: ${{ steps.cached-image.outputs.cache-hit != 'true' }}
        name: Build images
        run: |
          # enable buildkit for the docker builds
          export DOCKER_BUILDKIT=1
          docker build -f docker/Dockerfile-workers -t matrixdotorg/synapse-workers:latest .
          docker build -f docker/complement/Dockerfile -t complement-synapse:latest docker/complement
          docker image save complement-synapse:latest > /tmp/img-synapse.tar

  prosody-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - build-synapse
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres_user
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: "Set Go Version"
        run: |
          echo "$GOROOT_1_17_X64/bin" >> $GITHUB_PATH
          echo "~/go/bin" >> $GITHUB_PATH
      - name: Checkout matrix-bifrost
        uses: actions/checkout@v3
        with:
          path: matrix-bifrost
      
      # Set up the XMPP server
      - name: Set up prosody
        run: |
          sudo apt update
          sudo apt install prosody
          sudo cp matrix-bifrost/.github/support/prosody.cfg.lua /etc/prosody/prosody.cfg.lua
          sudo /etc/init.d/prosody start

      # Pull the complement-synapse image from cache
      - name: Checkout synapse
        uses: actions/checkout@v3
        with:
          path: synapse
          repository: matrix-org/synapse
          ref: master
      - name: Get synapse git sha
        id: gitsha
        run: |
          cd synapse
          echo '::set-output name=sha::'`git rev-parse --short HEAD`
          cd ..
      - name: Load cached complement-synapse image
        uses: actions/cache@v3
        with:
          path: /tmp/img-synapse.tar
          key: ${{ runner.os }}-complement-synapse-${{ steps.gitsha.outputs.sha }}
      - name: Load images
        run: |
          docker load --input /tmp/img-synapse.tar

      # Build and install homerunner
      - name: Checkout matrix-org/complement
        uses: actions/checkout@v3
        with:
          repository: matrix-org/complement
          path: complement
      - name: Install Complement Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libolm3 libolm-dev
      - name: Build homerunner
        run: |
          cd complement
          go build ./cmd/homerunner
          cd ..
      
      # Setup node & run tests
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run Homerunner tests
        timeout-minutes: 10
        env:
          BIFROST_TEST_PGDB: "bifrost_integtest"
          BIFROST_TEST_PGURL: "postgresql://postgres_user:postgres_password@localhost"
          BIFROST_TEST_ENABLEPG: "yes"
        run: |
          cd matrix-bifrost
          npm ci
          HOMERUNNER_SPAWN_HS_TIMEOUT_SECS=100 ../complement/homerunner &
          bash -ic 'yarn test:e2e'
